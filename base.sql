-- MySQL Script generated by MySQL Workbench
-- 03/17/16 13:40:34
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gautierg
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gautierg
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gautierg` DEFAULT CHARACTER SET utf8 ;
USE `gautierg` ;

-- -----------------------------------------------------
-- Table `gautierg`.`ifup_image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_image` (
  `ifup_image_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_image_file` VARCHAR(60) NOT NULL,
  `ifup_image_title` VARCHAR(100) NULL,
  `ifup_image_alt` VARCHAR(100) NULL,
  PRIMARY KEY (`ifup_image_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_user` (
  `ifup_user_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_user_firstname` VARCHAR(35) NULL,
  `ifup_user_lastname` VARCHAR(35) NULL,
  `ifup_user_email` VARCHAR(60) NOT NULL,
  `ifup_user_password` VARCHAR(32) NOT NULL,
  `ifup_user_confirmation_token` VARCHAR(60) NULL,
  `ifup_user_register_date` DATETIME NOT NULL,
  `ifup_user_phone` VARCHAR(11) NULL,
  `ifup_user_image_id` INT NULL,
  `ifup_user_online` TINYINT(1) NULL,
  `ifup_user_status` TINYINT(1) NULL DEFAULT 0,
  `ifup_user_birthday` DATE NULL,
  `ifup_user_time_rate` INT NULL,
  `ifup_user_biography` TEXT NULL,
  `ifup_user_archived_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ifup_user_id`),
  INDEX `fk_ifup_user_ifup_image1_idx` (`ifup_user_image_id` ASC),
  CONSTRAINT `fk_ifup_user_ifup_image1`
    FOREIGN KEY (`ifup_user_image_id`)
    REFERENCES `gautierg`.`ifup_image` (`ifup_image_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_news`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_news` (
  `ifup_news_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_news_title` VARCHAR(200) NOT NULL,
  `ifup_news_content` TEXT NOT NULL,
  `ifup_news_image_id` INT NULL,
  `ifup_news_date` DATETIME NOT NULL,
  PRIMARY KEY (`ifup_news_id`),
  INDEX `fk_ifup_news_ifup_image1_idx` (`ifup_news_image_id` ASC),
  CONSTRAINT `fk_ifup_news_ifup_image1`
    FOREIGN KEY (`ifup_news_image_id`)
    REFERENCES `gautierg`.`ifup_image` (`ifup_image_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_filter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_filter` (
  `ifup_filter_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_filter_name` VARCHAR(35) NOT NULL,
  `ifup_filter_image_id` INT NULL,
  `ifup_filter_archived_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ifup_filter_id`),
  INDEX `fk_ifup_filter_ifup_image1_idx` (`ifup_filter_image_id` ASC),
  CONSTRAINT `fk_ifup_filter_ifup_image1`
    FOREIGN KEY (`ifup_filter_image_id`)
    REFERENCES `gautierg`.`ifup_image` (`ifup_image_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_contact` (
  `ifup_contact_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_contact_email` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`ifup_contact_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_service` (
  `ifup_service_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_service_address` VARCHAR(255) NOT NULL,
  `ifup_service_message` TEXT NOT NULL,
  `ifup_service_user_if_id` INT NOT NULL,
  `ifup_service_user_up_id` INT NULL,
  `ifup_service_filter_id` INT NOT NULL,
  `ifup_service_up_lat_len` VARCHAR(20) NULL,
  `ifup_service_if_lat_len` VARCHAR(20) NULL,
  `ifup_service_start` DATETIME NULL,
  `ifup_service_finish` DATETIME NULL,
  PRIMARY KEY (`ifup_service_id`),
  INDEX `fk_ifup_request_ifup_user1_idx` (`ifup_service_user_if_id` ASC),
  INDEX `fk_ifup_request_ifup_filter1_idx` (`ifup_service_filter_id` ASC),
  INDEX `fk_ifup_request_ifup_user2_idx` (`ifup_service_user_up_id` ASC),
  CONSTRAINT `fk_ifup_request_ifup_user1`
    FOREIGN KEY (`ifup_service_user_if_id`)
    REFERENCES `gautierg`.`ifup_user` (`ifup_user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ifup_request_ifup_filter1`
    FOREIGN KEY (`ifup_service_filter_id`)
    REFERENCES `gautierg`.`ifup_filter` (`ifup_filter_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ifup_request_ifup_user2`
    FOREIGN KEY (`ifup_service_user_up_id`)
    REFERENCES `gautierg`.`ifup_user` (`ifup_user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_newsletter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_newsletter` (
  `ifup_newsletter_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_newsletter_content` TEXT NOT NULL,
  `ifup_newsletter_object` VARCHAR(100) NOT NULL,
  `ifup_newsletter_title` VARCHAR(150) NOT NULL,
  `ifup_newsletter_date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ifup_newsletter_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_images_newsletters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_images_newsletters` (
  `ifup_newsletter_id` INT NOT NULL COMMENT 'il peut y avoir une même image dans plusieurs newsletters (comme le logo par exemple, ou autres images récurrentes), d\'où la nécessité de la table intermédiaire.',
  `ifup_image_id` INT NOT NULL,
  PRIMARY KEY (`ifup_newsletter_id`, `ifup_image_id`),
  INDEX `fk_ifup_newsletter_has_ifup_image_ifup_image1_idx` (`ifup_image_id` ASC),
  INDEX `fk_ifup_newsletter_has_ifup_image_ifup_newsletter1_idx` (`ifup_newsletter_id` ASC),
  CONSTRAINT `fk_ifup_newsletter_has_ifup_image_ifup_newsletter1`
    FOREIGN KEY (`ifup_newsletter_id`)
    REFERENCES `gautierg`.`ifup_newsletter` (`ifup_newsletter_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ifup_newsletter_has_ifup_image_ifup_image1`
    FOREIGN KEY (`ifup_image_id`)
    REFERENCES `gautierg`.`ifup_image` (`ifup_image_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_district`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_district` (
  `ifup_district_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_district_zip_code` INT(5) NOT NULL,
  `ifup_district_name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`ifup_district_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_users_districts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_users_districts` (
  `ifup_district_id` INT NOT NULL,
  `ifup_user_id` INT NOT NULL,
  PRIMARY KEY (`ifup_district_id`, `ifup_user_id`),
  INDEX `fk_ifup_district_has_ifup_user_ifup_user1_idx` (`ifup_user_id` ASC),
  INDEX `fk_ifup_district_has_ifup_user_ifup_district1_idx` (`ifup_district_id` ASC),
  CONSTRAINT `fk_ifup_district_has_ifup_user_ifup_district1`
    FOREIGN KEY (`ifup_district_id`)
    REFERENCES `gautierg`.`ifup_district` (`ifup_district_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ifup_district_has_ifup_user_ifup_user1`
    FOREIGN KEY (`ifup_user_id`)
    REFERENCES `gautierg`.`ifup_user` (`ifup_user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_users_filters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_users_filters` (
  `ifup_user_id` INT NOT NULL,
  `ifup_filter_id` INT NOT NULL,
  PRIMARY KEY (`ifup_user_id`, `ifup_filter_id`),
  INDEX `fk_ifup_user_has_ifup_filter_ifup_filter1_idx` (`ifup_filter_id` ASC),
  INDEX `fk_ifup_user_has_ifup_filter_ifup_user1_idx` (`ifup_user_id` ASC),
  CONSTRAINT `fk_ifup_user_has_ifup_filter_ifup_user1`
    FOREIGN KEY (`ifup_user_id`)
    REFERENCES `gautierg`.`ifup_user` (`ifup_user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ifup_user_has_ifup_filter_ifup_filter1`
    FOREIGN KEY (`ifup_filter_id`)
    REFERENCES `gautierg`.`ifup_filter` (`ifup_filter_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_services_candidates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_services_candidates` (
  `ifup_user_id` INT NOT NULL,
  `ifup_service_id` INT NOT NULL COMMENT 'table intermédiaire pour stocker les utilisateurs \'\'candidats\'\' correspondant aux critères de recherche d\'un service. Lorsqu\'un service aura trouvé un prestataire, toutes les entrées qui ont l\'id de ce service seront supprimées. Nous veillerons à ce qu\'un utilisateur ne puisse être candidat qu\'à un service à la fois. De ce fait, un utilisateur ne pourra pas être notifié pour plusieurs services à la fois. Si un service est déjà lié à un utilisateur dans cette table, l\'utilisateur ne pourra pas être ajouté à une autre demande de service.',
  PRIMARY KEY (`ifup_user_id`, `ifup_service_id`),
  INDEX `fk_ifup_user_has_ifup_service_ifup_service1_idx` (`ifup_service_id` ASC),
  INDEX `fk_ifup_user_has_ifup_service_ifup_user1_idx` (`ifup_user_id` ASC),
  CONSTRAINT `fk_ifup_user_has_ifup_service_ifup_user1`
    FOREIGN KEY (`ifup_user_id`)
    REFERENCES `gautierg`.`ifup_user` (`ifup_user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ifup_user_has_ifup_service_ifup_service1`
    FOREIGN KEY (`ifup_service_id`)
    REFERENCES `gautierg`.`ifup_service` (`ifup_service_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_faq_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_faq_category` (
  `ifup_faq_category_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_faq_category_title` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`ifup_faq_category_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_faq`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_faq` (
  `ifup_faq_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_faq_question` TEXT NOT NULL,
  `ifup_faq_answer` TEXT NOT NULL,
  `ifup_faq_category_id` INT NOT NULL,
  PRIMARY KEY (`ifup_faq_id`),
  INDEX `fk_ifup_faq_ifup_faq_category1_idx` (`ifup_faq_category_id` ASC),
  CONSTRAINT `fk_ifup_faq_ifup_faq_category1`
    FOREIGN KEY (`ifup_faq_category_id`)
    REFERENCES `gautierg`.`ifup_faq_category` (`ifup_faq_category_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gautierg`.`ifup_user_admin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gautierg`.`ifup_user_admin` (
  `ifup_user_admin_id` INT NOT NULL AUTO_INCREMENT,
  `ifup_user_admin_firstname` VARCHAR(35) NOT NULL,
  `ifup_user_admin_lastname` VARCHAR(35) NOT NULL,
  `ifup_user_admin_email` VARCHAR(60) NOT NULL,
  `ifup_user_admin_password` VARCHAR(32) NOT NULL,
  `ifup_user_admin_phone` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`ifup_user_admin_id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
